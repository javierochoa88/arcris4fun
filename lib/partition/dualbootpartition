#!/bin/bash


uefi_rootdualboot () {

clear
rmmod floppy
clear
swapdisco=$( fdisk -l | grep "/dev/\|swap" | grep swap | awk -F ' ' '{print $1}' )
umount -R /mnt
swapoff ${swapdisco}
clear
swapoff -a
swapon -a
rm /mnt/etc/fstab
clear 
#Desmontamos todos los discos y hacemos swapoff

part=""
disk=""
partitions=""
p=""
part=""
rootfs=""


tableboot="BIOS LEGACY"
part="$(lsblk -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print "/dev/" $1 " " $2}' | sort -u | sed '/f/d' | sed '/sr/d' )" 
disk=$(dialog --backtitle "${title}" --clear  --ok-label "${msg_part_select}" --no-cancel --menu "${msg_part_select_arch}" 12 45 0 ${part} 2>&1 >/dev/tty)

partitioner=$(dialog --backtitle "${title}" --clear --title "${msg_fmt_disk}" --ok-label "${oklabel}" --no-cancel --menu "${msg_fmt_create}" 9 0 0\
    "cfdisk" "${msg_fmt_type1}" \
    "fdisk " "${msg_fmt_type2}" \
    "parted" "${msg_fmt_type2}" 2>&1 > /dev/tty)

clear

$partitioner $disk

fdisk -l "$disk" > /tmp/partitions

#partitions="$(cat /tmp/partitions | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}')"
partitions=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}' | grep /dev/ | awk '{if (NR=1) {print}}' | sed 's/*//g')
p="$(echo "$partitions")"

part=$(dialog --backtitle "${title}" --title "${msg_fmt_mount}" --ok-label "${oklabel}" --no-cancel --clear \
  --menu ${msg_fmt_mount_root} 10 55 0 ${p} 2>&1 > /dev/tty)

rootfs=$part

p=$(echo "$p" | grep -v $part)

bootwin=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | grep "EFI" | awk '{print $1}' )


dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80 
mount "$rootfs" /mnt
mkdir -p /mnt/boot/EFI
mount "$bootwin" /mnt/boot/EFI



cmd=(dialog --backtitle "${title}" --separate-output --ok-label "${msg_fmt_mount_options}" --cancel-label "${msg_fmt_end}" \--checklist "${menu_fmt_opt}" 13 75 0)
options=("/home" "${msg_fmt_opt1}" off
  "/tmp " "${msg_fmt_opt2}" off
  "/usr " "${msg_fmt_opt3}" off
  "/var " "${msg_fmt_opt4}" off
  "/srv " "${msg_fmt_opt5}" off
  "/opt " "${msg_fmt_opt6}" off
  "swap " "${msg_fmt_opt7}" off
  )
choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
clear
for choice in $choices
do
  case $choice in
        
    "/home")

#     dialog --backtitle "${title}" --title "${msg_fmt_part}" --stdout --ok-label "${oklabel}" --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_home}" 0 55 0 ${p} 2>&1 > /dev/tty )
      homefs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      homedir="home"
      mkdir -p /mnt/home
      mount "$homefs" /mnt/home
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/tmp")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "$titulo" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_tmp}" 0 55 0 ${p} 2>&1 > /dev/tty )
      tmpfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      tmpdir="tmp"
      mkdir -p /mnt/tmp
      mount "$tmpfs" /mnt/tmp
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/usr")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "$titulo" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_usr}" 0 55 0 ${p} 2>&1 > /dev/tty )
      usrfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      usrdir="usr"
      mkdir -p /mnt/usr
      mount "$usrfs" /mnt/usr
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/var")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_var}" 0 55 0 ${p} 2>&1 > /dev/tty )
      varfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      vardir="var"
      mkdir -p /mnt/var
      mount "$varfs" /mnt/var
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/srv")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_srv}" 0 55 0 ${p} 2>&1 > /dev/tty )
      srvfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      srvdir="srv"
      mkdir -p /mnt/srv
      mount "$srvfs" /mnt/srv
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/opt")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_opt}" 0 55 0 ${p} 2>&1 > /dev/tty )
      optfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      optdir="opt"
      mkdir -p /mnt/opt
      mount "$optfs" /mnt/opt
      p=$(echo "$p" | grep -v "$part")
      ;;

    "swap")
#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_swap}" 0 55 0 ${p} 2>&1 > /dev/tty)
      dialog --title "${msg_fmt_swap}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkswap $part && swapon $part" 10 100
      swap="$part"
      p=$(echo "$p" | grep -v "$part")

  esac
done


clear
partprobe
clear

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_info}" --stdout --ok-label "${oklabel}" \
--prgbox "lsblk -lo NAME,SIZE,MOUNTPOINT,TYPE > /tmp/partitions && \
echo -------------------------------------- && \
echo _ && \
cat /tmp/partitions && \
echo _ && \
echo --------------------------------------" 20 50

#PARTICIONADO MANUAL


}




bios_rootdualboot () {

clear
rmmod floppy
clear
swapdisco=$( fdisk -l | grep "/dev/\|swap" | grep swap | awk -F ' ' '{print $1}' )
umount -R /mnt
swapoff ${swapdisco}
clear
swapoff -a
swapon -a
rm /mnt/etc/fstab
clear 
#Desmontamos todo disco y swapoff

part=""
disk=""
partitions=""
p=""
part=""
rootfs=""


tableboot="BIOS LEGACY"
part="$(lsblk -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print "/dev/" $1 " " $2}' | sort -u | sed '/f/d' | sed '/sr/d' )" 
disk=$(dialog --backtitle "${title}" --clear  --ok-label "${msg_part_select}" --no-cancel --menu "${msg_part_select_arch}" 12 45 0 ${part} 2>&1 >/dev/tty)

partitioner=$(dialog --backtitle "${title}" --clear --title "${msg_fmt_disk}" --ok-label "${oklabel}" --no-cancel --menu "${msg_fmt_create}" 9 0 0\
    "cfdisk" "${msg_fmt_type1}" \
    "fdisk " "${msg_fmt_type2}" \
    "parted" "${msg_fmt_type2}" 2>&1 > /dev/tty)

clear

$partitioner $disk

fdisk -l "$disk" > /tmp/partitions

#partitions="$(cat /tmp/partitions | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}')"
partitions=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}' | grep /dev/ | awk '{if (NR=1) {print}}' | sed 's/*//g')
p="$(echo "$partitions")"

part=$(dialog --backtitle "${title}" --title "${msg_fmt_mount}" --ok-label "${oklabel}" --no-cancel --clear \
  --menu "${msg_fmt_mount_root}" 10 55 0 ${p} 2>&1 > /dev/tty)

#dialog --no-collapse --cr-wrap --backtitle "${title}" --title "-| Verificando estado de partición |-" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80

rootfs=$part

p=$(echo "$p" | grep -v $part)

dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80

mount "$rootfs" /mnt


cmd=(dialog --backtitle "${title}" --separate-output --ok-label "${msg_fmt_mount_options}" --cancel-label "${msg_fmt_end}" \--checklist "${menu_fmt_opt}" 13 75 0)
options=("/home" "${msg_fmt_opt1}" off
  "/tmp " "${msg_fmt_opt2}" off
  "/usr " "${msg_fmt_opt3}" off
  "/var " "${msg_fmt_opt4}" off
  "/srv " "${msg_fmt_opt5}" off
  "/opt " "${msg_fmt_opt6}" off
  "swap " "${msg_fmt_opt7}" off
  )
choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
clear
for choice in $choices
do
  case $choice in
        
    "/home")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_home}" 0 55 0 ${p} 2>&1 > /dev/tty )
      homefs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      homedir="home"
      mkdir -p /mnt/home
      mount "$homefs" /mnt/home
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/tmp")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_tmp}" 0 55 0 ${p} 2>&1 > /dev/tty )
      tmpfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      tmpdir="tmp"
      mkdir -p /mnt/tmp
      mount "$tmpfs" /mnt/tmp
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/usr")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_usr}" 0 55 0 ${p} 2>&1 > /dev/tty )
      usrfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      usrdir="usr"
      mkdir -p /mnt/usr
      mount "$usrfs" /mnt/usr
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/var")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_var}" 0 55 0 ${p} 2>&1 > /dev/tty )
      varfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      vardir="var"
      mkdir -p /mnt/var
      mount "$varfs" /mnt/var
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/srv")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_srv}" 0 55 0 ${p} 2>&1 > /dev/tty )
      srvfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      srvdir="srv"
      mkdir -p /mnt/srv
      mount "$srvfs" /mnt/srv
      p=$(echo "$p" | grep -v "$part")
      ;;

    "/opt")

#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_opt}" 0 55 0 ${p} 2>&1 > /dev/tty )
      optfs="$part"
      #dialog --backtitle "$titulo" --title "| Verificando estado de Disco |" --stdout --ok-label "Siguiente" --prgbox "e2fsck -f -y -v -C 0 $part" 20 80
      #partitioning
      dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80
      optdir="opt"
      mkdir -p /mnt/opt
      mount "$optfs" /mnt/opt
      p=$(echo "$p" | grep -v "$part")
      ;;

    "swap")
#     dialog --backtitle "$titulo" --title "| TIPO DE PARTICIÓN |" --stdout --ok-label 'Siguiente' --msgbox "$(echo "" && fdisk -l $disk | grep gpt && echo "" && fdisk -l $disk | grep /dev/ )" 11 150
      part=$(dialog --backtitle "${title}" --ok-label "${oklabel}" --no-cancel --clear --title "${msg_fmt_part}" \
        --menu "${msg_fmt_part_swap}" 0 55 0 ${p} 2>&1 > /dev/tty)
      dialog --title "${msg_fmt_swap}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkswap $part && swapon $part" 10 100
      swap="$part"
      p=$(echo "$p" | grep -v "$part")

  esac
done


clear
partprobe
clear

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_info}" --stdout --ok-label "${oklabel}" \
--prgbox "lsblk -lo NAME,SIZE,MOUNTPOINT,TYPE > /tmp/partitions && \
echo -------------------------------------- && \
echo _ && \
cat /tmp/partitions && \
echo _ && \
echo --------------------------------------" 20 50

#PARTICIONADO MANUAL


}



bios_solorootdualboot () { 

clear
rmmod floppy
clear
swapdisco=$( fdisk -l | grep "/dev/\|swap" | grep swap | awk -F ' ' '{print $1}' )
umount -R /mnt
swapoff ${swapdisco}
clear
swapoff -a
swapon -a
rm /mnt/etc/fstab
clear 
#Desmontamos todos los disco y hacemos swapoff

part=""
disk=""
partitions=""
p=""
part=""
rootfs=""


part="$(lsblk -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print "/dev/" $1 " " $2}' | sort -u | sed '/f/d' | sed '/sr/d' )" 
disk=$(dialog --backtitle "${title}" --clear  --ok-label "${msg_part_select}" --no-cancel --menu "${msg_part_select_arch}" 12 45 0 ${part} 2>&1 >/dev/tty)

partitioner=$(dialog --backtitle "${title}" --clear --title "${msg_fmt_disk}" --ok-label "${oklabel}" --no-cancel --menu "${msg_fmt_create}" 9 0 0\
    "cfdisk" "${msg_fmt_type1}" \
    "fdisk " "${msg_fmt_type2}" \
    "parted" "${msg_fmt_type2}" 2>&1 > /dev/tty)

clear

$partitioner $disk

fdisk -l "$disk" > /tmp/partitions

#partitions="$(cat /tmp/partitions | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}')"
partitions=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}' | grep /dev/ | awk '{if (NR=1) {print}}' | sed 's/*//g')
p="$(echo "$partitions")"

part=$(dialog --backtitle "${title}" --title "${msg_fmt_mount}" --ok-label "${oklabel}" --no-cancel --clear \
  --menu "${msg_fmt_mount_root}" 10 55 0 ${p} 2>&1 > /dev/tty)

rootfs=$part

# bootwin=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | grep "*" | awk -F ' ' '{print $1}' )

dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80 
mount "$rootfs" /mnt


clear
partprobe

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_info}" --stdout --ok-label "${oklabel}" \
--prgbox "lsblk -lo NAME,SIZE,MOUNTPOINT,TYPE > /tmp/partitions && \
echo -------------------------------------- && \
echo _ && \
cat /tmp/partitions && \
echo _ && \
echo --------------------------------------" 20 50


}





uefi_solorootdualboot () { 

clear
rmmod floppy
clear
swapdisco=$( fdisk -l | grep "/dev/\|swap" | grep swap | awk -F ' ' '{print $1}' )
umount -R /mnt
swapoff ${swapdisco}
clear
swapoff -a
swapon -a
rm /mnt/etc/fstab
clear 
#Desmontamos todos los discos y hacemos swapoff

part=""
disk=""
partitions=""
p=""
part=""
rootfs=""


part="$(lsblk -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print "/dev/" $1 " " $2}' | sort -u | sed '/f/d' | sed '/sr/d' )" 
disk=$(dialog --backtitle "${title}" --clear  --ok-label "${msg_part_select}" --no-cancel --menu "${msg_part_select_arch}" 12 45 0 ${part} 2>&1 >/dev/tty)

partitioner=$(dialog --backtitle "${title}" --clear --title "${msg_fmt_disk}" --ok-label "${oklabel}" --no-cancel --menu "${msg_fmt_create}" 9 0 0\
    "cfdisk" "${msg_fmt_type1}" \
    "fdisk " "${msg_fmt_type2}" \
    "parted" "${msg_fmt_type2}" 2>&1 > /dev/tty)

clear

$partitioner $disk

fdisk -l "$disk" > /tmp/partitions

#partitions="$(cat /tmp/partitions | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}')"
partitions=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1,$5}' | grep /dev/ | awk '{if (NR=1) {print}}' | sed 's/*//g')
p="$(echo "$partitions")"

part=$(dialog --backtitle "${title}" --title "${msg_fmt_mount}" --ok-label "${oklabel}" --no-cancel --clear \
  --menu "${msg_fmt_mount_root}" 10 55 0 ${p} 2>&1 > /dev/tty)

rootfs=$part

bootwin=$(fdisk -l ${disk} | grep /dev/ | awk '{if (NR!=1) {print}}' | grep "EFI" | awk '{print $1}' )


dialog --clear --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_ext4}" --stdout --ok-label "${oklabel}" --prgbox "echo "" && mkfs.ext4 -F $part" 20 80 
mount "$rootfs" /mnt
mkdir -p /mnt/boot/EFI
mount "$bootwin" /mnt/boot/EFI


clear
partprobe

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_fmt_info}" --stdout --ok-label "${oklabel}" \
--prgbox "lsblk -lo NAME,SIZE,MOUNTPOINT,TYPE > /tmp/partitions && \
echo -------------------------------------- && \
echo _ && \
cat /tmp/partitions && \
echo _ && \
echo --------------------------------------" 20 50


}












dualpartition () { 

cmd=(dialog --no-collapse --cr-wrap --backtitle "${title}" --title "${msg_dual_boot}" \
--ok-label "${oklabel}" --menu "${msg_menu_disk}" 11 60 11)
options=(1 "${msg_fmt_dual1}"   
         2 "${msg_fmt_dual2}")

choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
clear
for choice in $choices
do
    case $choice in
    ################

1) # SOLO ROOT ################ 

bootarch=$( ls /sys/firmware/efi/ | grep -ic efivars )

### UEFII
if [[ $bootarch == 1 ]]; then  
  
echo " UEFI"
uefi_solorootdualboot
else  

echo " BIOS"
bios_solorootdualboot

fi

;;

2) # MAS PARTICIONES ################

bootarch=$( ls /sys/firmware/efi/ | grep -ic efivars )

### UEFII
if [[ $bootarch == 1 ]]; then  
  
echo " UEFI"
uefi_rootdualboot
else  

echo " BIOS"
bios_rootdualboot

fi

;;


    esac
done


}


funcionesextras () {

bootarch=$( ls /sys/firmware/efi/ | grep -ic efivars )

### UEFII
if [[ $bootarch == 1 ]]; then  
  
echo " UEFI"

### BIOSSSSSS 
else  

echo " BIOS"

fi


part="$(echo "print devices" | parted | grep /dev/ | awk '{if (NR!=1) {print}}' | sed '/sr/d')" 
disk=$(dialog --backtitle "${title}" --clear  --ok-label "${oklabel}" --no-cancel --menu "${msg_part_select}" 10 50 0 ${part} 2>&1 >/dev/tty)


}